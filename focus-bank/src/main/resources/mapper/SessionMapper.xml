<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pyj.focusbank.dao.SessionMapper">

    <!-- 진행 중인 세션 1개 조회 -->
    <select id="findActiveSession" parameterType="string" resultType="FocusSessionDto">
        SELECT
            session_id,
            anon_id,
            started_at,
            ended_at,
            duration_sec,
            created_at
          FROM focus_session
         WHERE anon_id = #{anonId}
           AND ended_at IS NULL
         ORDER BY started_at DESC
               LIMIT 1
    </select>

    <!-- 특정 날짜의 세션 목록 조회 -->
    <select id="findByAnonAndDate" parameterType="map" resultType="FocusSessionDto">
        SELECT
            session_id,
            anon_id,
            started_at,
            ended_at,
            duration_sec,
            created_at
         FROM focus_session
        WHERE anon_id = #{anonId}
          AND DATE(started_at) = #{date}
        ORDER BY started_at ASC
    </select>

    <!-- 열린 세션 조회 -->
    <select id="findOpenByAnon" parameterType="string" resultType="FocusSessionDto">
        SELECT
            session_id,
            anon_id,
            started_at,
            ended_at,
            duration_sec,
            created_at
        FROM focus_session
        WHERE anon_id = #{anonId} AND ended_at IS NULL
        ORDER BY started_at DESC
            LIMIT 1
    </select>

    <!-- 부모 보장: 없으면 생성, 있으면 무시 -->
    <insert id="ensureAnonUser" parameterType="string">
        INSERT INTO anonymous_user (anon_id, created_at, nickname_tag)
        VALUES (#{anonId}, NOW(), LPAD(FLOOR(RAND()*9999)+1,4,'0'))
            ON DUPLICATE KEY UPDATE created_at = created_at

    </insert>

    <!-- 집중 시작 : 안전 INSERT, 부모가 있을 때만 들어감 (FK 예외 예방) -->
    <insert id="startFocus" parameterType="string">
        INSERT INTO focus_session (anon_id, started_at, created_at)
        SELECT au.anon_id, NOW(), NOW()
          FROM anonymous_user au
         WHERE BINARY au.anon_id = #{anonId}
    </insert>

    <!-- 집중 종료 -->
    <update id="endFocus" parameterType="long">
        UPDATE focus_session
        SET ended_at = NOW(),
            duration_sec = TIMESTAMPDIFF(SECOND, started_at, NOW())
        WHERE session_id = #{sessionId}
          AND ended_at IS NULL
    </update>

    <!-- 종료 후 일별 집계 갱신 -->
    <update id="updateDailyAggregate" parameterType="long">
        INSERT INTO daily_aggregate (target_date, anon_id, total_seconds)
        SELECT DATE(started_at), anon_id, duration_sec
          FROM focus_session
         WHERE session_id = #{sessionId}
           AND duration_sec IS NOT NULL
            ON DUPLICATE KEY UPDATE
                             total_seconds = total_seconds + VALUES(total_seconds)
    </update>

    <!-- 단건 조회 -->
    <select id="findById" parameterType="long" resultType="FocusSessionDto">
        SELECT
            session_id,
            anon_id,
            started_at,
            ended_at,
            duration_sec,
            created_at
         FROM focus_session
        WHERE session_id = #{sessionId}
    </select>

</mapper>